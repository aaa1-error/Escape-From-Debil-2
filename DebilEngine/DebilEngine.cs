using System.Diagnostics;

namespace Debil
{
    public partial class DebilEngine
    {
        public static string WallTexture = "‚¨õ";
        public Level Map;
        public Player Debchick;
        public List<IRenderer> Renderers;
        IRenderer CurrentRenderer;
        int RendererIndex;
        System.Timers.Timer PlayerUpdateTimer;
        System.Timers.Timer EntityMoveTimer;
        System.Timers.Timer EntityUpdateTimer;
        const int PlayerUpdateInterval = 1000;
        const int EntityMoveInterval = 350;
        const int EntityUpdateInterval = 5;
        public DebilEngine(int Height, int Width, Level.ILevelGenerator levelGen, Level.IMobPlacer mobPlacer, Level.IPickupPlacer pickupPlacer)
        {
            Map = new Level(Height, Width, levelGen, mobPlacer, pickupPlacer, this);
            Debchick = new Player(0, 0, "ü§°", this);
            Renderers = new List<IRenderer>();
            Renderers.Add(new AreaRender(51, 51));
            CurrentRenderer = Renderers[0];
            RendererIndex = 0;

            PlayerUpdateTimer = new System.Timers.Timer(PlayerUpdateInterval);
            EntityMoveTimer = new System.Timers.Timer(EntityMoveInterval);
            EntityUpdateTimer = new System.Timers.Timer(EntityUpdateInterval);
        }
        public void Initialize()
        {
            Map.Generate();

            PlayerUpdateTimer.Close();
            EntityUpdateTimer.Close();
            EntityMoveTimer.Close();

            PlayerUpdateTimer.Elapsed += Debchick.Update;

            foreach(var mob in Map.Mobs)
            {
                EntityUpdateTimer.Elapsed += mob.Update;
                EntityMoveTimer.Elapsed += mob.Move;
            }

            Console.WriteLine("Mobs");
            
            foreach(var pickup in Map.Pickups)
            {
                EntityUpdateTimer.Elapsed += pickup.CheckCollision;
            }

            Console.WriteLine("Pickups");

            Console.WriteLine("Finally");
        }
        public void Run()
        {
            //Map.TeleportRandom(ref Debchick);
            Debchick.Position = Map.GetRandomPosition();
            Map.UpdateWaveMap(Debchick.Position);
            Debchick.Health = 1;
            Debchick.Score = 0;

            PlayerUpdateTimer.Start();
            EntityUpdateTimer.Start();
            EntityMoveTimer.Start();

            while (Debchick.Health > 0)
            {
                Console.CursorVisible = false;
                Console.SetCursorPosition(0, 0);

                Debchick.Input();
                CurrentRenderer.Draw(Map);

                Thread.Sleep(5);
            }

            PlayerUpdateTimer.Stop();
            EntityUpdateTimer.Stop();
            EntityMoveTimer.Stop();
        }
        public void Menu()
        {
            ConsoleKeyInfo key;
            Process proc;

            Initialize();

            while (true)
            {
                proc = Process.Start("clear");
                proc.Kill(true);
                Console.SetCursorPosition(0, 0);

                Console.WriteLine("\u001b[38;5;202m" +
                                  "‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñÑ‚ñÑ‚ñÑ‚ñÑ    ‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñì         ‚ñÑ‚ñà‚ñà‚ñà‚ñà  ‚ñÑ‚ñÑ‚ñÑ       ‚ñà‚ñà‚ñà‚ñÑ ‚ñÑ‚ñà‚ñà‚ñà‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà \n" +
                                  "‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñì‚ñà   ‚ñÄ ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ ‚ñì‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí        ‚ñà‚ñà‚ñí ‚ñÄ‚ñà‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñì‚ñà‚ñà‚ñí‚ñÄ‚ñà‚ñÄ ‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ \n" +
                                  "‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà‚ñí ‚ñÑ‚ñà‚ñà‚ñí‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë       ‚ñí‚ñà‚ñà‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñë‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà    ‚ñì‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà   \n" +
                                  "‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñí‚ñì‚ñà  ‚ñÑ ‚ñí‚ñà‚ñà‚ñë‚ñà‚ñÄ  ‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñë       ‚ñë‚ñì‚ñà  ‚ñà‚ñà‚ñì‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà ‚ñí‚ñà‚ñà    ‚ñí‚ñà‚ñà ‚ñí‚ñì‚ñà  ‚ñÑ \n" +
                                  "‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñì‚ñà  ‚ñÄ‚ñà‚ñì‚ñë‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí   ‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÄ‚ñí ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí   ‚ñë‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí\n" +
                                  " ‚ñí‚ñí‚ñì  ‚ñí ‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÄ‚ñí‚ñë‚ñì  ‚ñë ‚ñí‚ñë‚ñì  ‚ñë    ‚ñë‚ñí   ‚ñí  ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñë   ‚ñë  ‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë\n" +
                                  " ‚ñë ‚ñí  ‚ñí  ‚ñë ‚ñë  ‚ñë‚ñí‚ñë‚ñí   ‚ñë  ‚ñí ‚ñë‚ñë ‚ñë ‚ñí  ‚ñë     ‚ñë   ‚ñë   ‚ñí   ‚ñí‚ñí ‚ñë‚ñë  ‚ñë      ‚ñë ‚ñë ‚ñë  ‚ñë\n" +
                                  " ‚ñë ‚ñë  ‚ñë    ‚ñë    ‚ñë    ‚ñë  ‚ñí ‚ñë  ‚ñë ‚ñë      ‚ñë ‚ñë   ‚ñë   ‚ñë   ‚ñí   ‚ñë      ‚ñë      ‚ñë   \n" +
                                  "   ‚ñë       ‚ñë  ‚ñë ‚ñë       ‚ñë      ‚ñë  ‚ñë         ‚ñë       ‚ñë  ‚ñë       ‚ñë      ‚ñë  ‚ñë\n" +
                                  " ‚ñë                   ‚ñë                                                    \n" +
                                  "                          Press any key to start\n" +
                                  "                             Press Esc to exit\u001b[0m");

                key = Console.ReadKey(true);

                proc = Process.Start("clear");
                proc.Kill(true);
                Console.SetCursorPosition(0, 0);

                if (key.Key == ConsoleKey.Escape)
                {
                    return;
                }

                Run();

                proc = Process.Start("clear");
                proc.Kill(true);
                Console.SetCursorPosition(0, 0);

                Console.WriteLine("\u001b[38;5;202m" +
                                  "‚ñì‚ñà‚ñà   ‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà    ‚ñà‚ñà    ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñà‚ñà‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ \n" +
                                  "‚ñí‚ñà‚ñà  ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí ‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñí   ‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñì‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ ‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå\n" +
                                  " ‚ñí‚ñà‚ñà ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë   ‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñà   ‚ñë‚ñà‚ñà   ‚ñà‚ñå\n" +
                                  " ‚ñë ‚ñê‚ñà‚ñà‚ñì‚ñë‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë   ‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñë‚ñà‚ñà‚ñë‚ñí‚ñì‚ñà  ‚ñÑ ‚ñë‚ñì‚ñà‚ñÑ   ‚ñå\n" +
                                  " ‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñë‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì    ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì \n" +
                                  "  ‚ñà‚ñà‚ñí‚ñí‚ñí ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë‚ñí‚ñì‚ñí ‚ñí ‚ñí     ‚ñí‚ñí‚ñì  ‚ñí ‚ñë‚ñì  ‚ñë‚ñë ‚ñí‚ñë ‚ñë ‚ñí‚ñí‚ñì  ‚ñí \n" +
                                  "‚ñì‚ñà‚ñà ‚ñë‚ñí‚ñë   ‚ñë ‚ñí ‚ñí‚ñë ‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë     ‚ñë ‚ñí  ‚ñí  ‚ñí ‚ñë ‚ñë ‚ñë  ‚ñë ‚ñë ‚ñí  ‚ñí \n" +
                                  "‚ñí ‚ñí ‚ñë‚ñë  ‚ñë ‚ñë ‚ñë ‚ñí   ‚ñë‚ñë‚ñë ‚ñë ‚ñë     ‚ñë ‚ñë  ‚ñë  ‚ñí ‚ñë   ‚ñë    ‚ñë ‚ñë  ‚ñë \n" +
                                  "‚ñë ‚ñë         ‚ñë ‚ñë     ‚ñë           ‚ñë     ‚ñë     ‚ñë  ‚ñë   ‚ñë    \n" +
                                  "‚ñë ‚ñë                           ‚ñë                  ‚ñë      \u001b[0m");

                Console.ReadKey(true);

                proc = Process.Start("clear");
                proc.Kill(true);
            }
        }
    }
}